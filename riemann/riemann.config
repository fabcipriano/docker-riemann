; -*- mode: clojure; -*-
; vim: filetype=clojure

; Import
(require '[riemann.email :refer :all])

; Init logging. No file parameter, log to stdout.
(logging/init)

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Include all config files found in directory
(include "/etc/riemann/conf.d")


; Log all events 
(instrumentation {:enabled? false})

; Expire old events from the index every 10 seconds.
(periodically-expire 10 {:keep-keys [:host :service :tags, :state, :description, :metric]})

; Configure Streams Riemann
(let [index (index)]
(streams
    (default :ttl 60

    ; Index all events immediately
    index
    
    ; send 5 mails in a hour at max
    (expired
      (rollup 5 3600
        ((mailgun {:sandbox "sandboxbbce98c2a7394a5998903b7dc5fecdcd.mailgun.org" :service-key "key-2bce28ca48cb293a39835e3545db7d83"} {:from "monitordigital@algartelecom.com.br"}) "fabianocp@yahoo.com.br")))
    
    #(info %))))
